#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 80
#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        }

    mkp_exit_AHL: mkp_exit_AML {
        compatible = "zmk,behavior-macro-one-param";
        #binding-cells = <1>;
        bindings = 
            <&macro_press>,
            <&macro_param_1to1 &mkp MACRO_PLACEHOLDER>,
            <&macro_pause_for_release>,
            <&macro_release>,
            <&macro_param_1to1 &mkp MACRO_PLACEHOLDER>,
            <&macro_top>,
            <&sl 4>;

        label = "MKP_EXIT_AML";
        }
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            tap-ms = <20>;
        };
    };

    
macros {};

behaviors {};
keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&to_layer_0 Q       &to_layer_0 W  &to_layer_0 E  &to_layer_0 R                &to_layer_0 T                                                    &to_layer_0 Y  &to_layer_0 U  &to_layer_0 I      &to_layer_0 O    &to_layer_0 P
&to_layer_0 A       &to_layer_0 S  &to_layer_0 D  &to_layer_0 F                &to_layer_0 G     &kp LS(LG(S))               &kp LEFT_BRACKET   &to_layer_0 H  &to_layer_0 J  &to_layer_0 K      &to_layer_0 L    &lt_to_layer_0 4 COLON
&to_layer_0 Z       &to_layer_0 X  &to_layer_0 C  &to_layer_0 V                &to_layer_0 B     &kp MINUS                   &kp RIGHT_BRACKET  &to_layer_0 N  &to_layer_0 M  &to_layer_0 COMMA  &to_layer_0 DOT  &kp SLASH
&mt LEFT_SHIFT TAB  &kp RIGHT_ALT  &kp LEFT_GUI   &lt_to_layer_0 3 LANGUAGE_2  &lt 2 LANGUAGE_1  &lt_to_layer_0 1 SPACE      &kp BACKSPACE      &lt 1 ENTER                                                       &kp K_MUTE
>;

            sensor-bindings = <&scroll_up_down>;
        };

        FUNCTION {
            bindings = <
&trans  &trans             &trans     &trans     &trans                       &kp F1  &kp F2  &kp F3  &kp F4  &kp F5
&trans  &kp LS(LA(LG(V)))  &kp LG(V)  &kp LG(C)  &trans  &trans      &kp F13  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10
&trans  &trans             &trans     &trans     &trans  &trans      &trans   &trans  &trans  &trans  &trans  &kp F11
&trans  &trans             &trans     &trans     &trans  &trans      &trans   &trans                          &kp F12
>;
        };

        NUM {
            bindings = <
&trans     &kp QUESTION  &kp EXCLAMATION  &kp HASH        &kp PLUS                                           &trans        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp RIGHT_PARENTHESIS
&kp EQUAL  &kp AT_SIGN   &kp MINUS        &kp UNDERSCORE  &kp ASTERISK  &kp LC(LA(KP_NUMBER_0))      &trans  &trans        &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp PERCENT
&kp SLASH  &kp ASTERISK  &kp MINUS        &kp PLUS        &kp LG(C)     &kp LG(V)                    &trans  &kp NUMBER_0  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp BACKSLASH
&trans     &trans        &trans           &trans          &trans        &trans                       &trans  &trans                                                  &kp PIPE
>;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                       &trans  &trans        &kp F3  &trans               &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &trans  &kp LC(LEFT)  &trans  &kp LC(RIGHT_ARROW)  &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &trans  &mkp MB4      &trans  &trans               &trans
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                                             &trans
>;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&to_layer_0 Q  &to_layer_0 W  &to_layer_0 E  &to_layer_0 R  &to_layer_0 T                       &trans  &trans    &kp F3    &trans    &trans
&to_layer_0 A  &to_layer_0 S  &to_layer_0 D  &to_layer_0 F  &trans         &kp TAB      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans         &trans         &trans         &trans         &trans         &trans       &trans  &trans  &mkp MB4  &trans    &mkp MB5  &trans
&trans         &trans         &trans         &trans         &trans         &trans       &trans  &trans                                &trans
>;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
>;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
>;
        };
    };
};
